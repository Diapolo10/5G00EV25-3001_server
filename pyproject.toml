[build-system]
requires = ["poetry-core>=1.2.0", "wheel",]
build-backend = "poetry.core.masonry.api"


[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "@overload",
]


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "**/__main__.py",
    "tests/*",
    "**/main.py",  # No point in including code that cannot be tested anyway
    "**/openapi_extension.py",
]


[tool.mypy]
plugins = ["sqlmypy",]


[tool.poetry]
name = "eguivalet_server"
version = "0.2.1"
description = "A server implementation for the EguiValet messaging service."

packages = [
    { include = "eguivalet_server", from = "src" },
]

authors = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]
maintainers = [
    "Juha JÃ¤rvinen <juha.3.jarvinen@tuni.fi>",
    "Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",
]

include = ["CHANGELOG.md", "LICENSE", "logging.conf"]
license = "MIT"
readme = "README.md"

homepage = "https://pypi.org/project/5G00EV25-3001_server/"
repository = "https://github.com/Diapolo10/5G00EV25-3001_server"
documentation = "https://github.com/Diapolo10/5G00EV25-3001_server/tree/main/docs"

keywords = [
    "api",
    "communication",
    "network",
    "networking",
    "python3",
    "restful",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: SQL",
    "Topic :: Communications :: Chat",
    "Topic :: Security",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = "^3.10.0"
fastapi = {version=">=0.85.1,<0.117.0", extras=["all",]}
uvicorn = ">=0.18.3,<0.38.0"
SQLAlchemy = ">=1.4.42,<3.0.0"
SQLAlchemy-Utils = ">=0.38.2,<0.43.0"
python-multipart = ">=0.0.5,<0.0.21"
requests = "^2.28.1"
tomli = "^2.0.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.13"
sqlalchemy-stubs = "^0.4.0"
types-sqlalchemy-utils = "^1.1.0"


[tool.poetry.group.linters]
optional = true


[tool.poetry.group.linters.dependencies]
ruff = ">=0.9,<0.14"


[tool.poetry.group.tests]
optional = true


[tool.poetry.group.tests.dependencies]
pytest = "^8.3.3"
pytest-cov = ">=5,<8"
tox = "^4.23.2"
tox-gh-actions = "^3.2.0"


[tool.poetry.urls]
"Source code" = "https://github.com/Diapolo10/5G00EV25-3001_server"
"Tracker" = "https://github.com/Diapolo10/5G00EV25-3001_server/issues"
"Changelog" = "https://github.com/Diapolo10/5G00EV25-3001_server/blob/main/CHANGELOG.md"


[tool.pylint."FORMAT"]
good-names = [
    "db",
]


[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120
disable = [
    # https://vald-phoenix.github.io/pylint-errors/
    "R0903",  # Too few public methods
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    "tests",
]


[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "CPY001",  # Copyright notice
    "D203",    # One blank line before class docstring
    "D212",    # Multi-line summary first line
    "PLR0913", # Too many arguments
    "Q000",    # Single quotes found but double quotes preferred
]
line-length = 120
show-fixes = true
preview = true
src = ["src",]
target-version = "py310"


[tool.ruff.lint.flake8-copyright]
author = "Lari Liuhamo"


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"


[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.ruff.lint.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405",]
"tests/*" = ["ANN", "ARG", "INP001", "S101",]
"logger.py" = ["N815",]
"crud.py" = ["E712",]


[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310, py311, py312
skip_missing_interpreters = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
passenv = GITHUB_*
allowlist_externals = poetry

commands =
    poetry run pytest
    poetry run coverage report
"""
